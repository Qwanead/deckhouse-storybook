{"version":3,"file":"InputRadioButton-ecf14902.js","sources":["../../src/shared/ui_kit/form/InputRadioButton/InputRadioButton.vue"],"sourcesContent":["<template>\n  <ul class=\"radio-btn-list\">\n    <li class=\"radio-btn-item\" v-for=\"option in options\" :key=\"option.value\">\n      <RadioButtonBase\n        :name=\"randomName\"\n        :label=\"option.name\"\n        :value=\"option.value\"\n        :disabled=\"option.disabled || disabled\"\n        :modelValue=\"modelValue\"\n        @update:modelValue=\"onInputChange\"\n      >\n        {{ option.name }}\n      </RadioButtonBase>\n    </li>\n  </ul>\n</template>\n\n<script setup lang=\"ts\">\nimport { string, bool, array } from \"vue-types\";\nimport RadioButtonBase from \"@/shared/ui_kit/form/InputRadioButton/RadioButtonBase.vue\";\nimport { randomString } from \"@/shared/ui_kit/utils\";\n\nexport interface InputRadioOption {\n  name: string;\n  value?: string;\n  disabled?: boolean;\n}\n\nconst props = defineProps({\n  modelValue: string(),\n  disabled: bool().def(false),\n  options: array<InputRadioOption>().def(() => []),\n});\n\nconst emit = defineEmits<{\n  (event: \"update:modelValue\", value: typeof props.modelValue): void;\n}>();\n\nconst randomName = randomString();\n\nconst onInputChange = (value: typeof props.modelValue) => {\n  emit(\"update:modelValue\", value);\n};\n</script>\n\n<style scoped lang=\"scss\">\n.radio-btn-list {\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  gap: 30px;\n}\n\n.radio-btn-item {\n  flex-shrink: 0;\n}\n</style>\n"],"names":["randomName","randomString","onInputChange","value","emit"],"mappings":"0fAsCA,MAAMA,EAAaC,IAEbC,EAAiBC,GAAmC,CACxDC,EAAK,oBAAqBD,CAAK,CAAA"}