{"version":3,"file":"InputTextConfirm-c0059b46.js","sources":["../../src/shared/ui_kit/form/InputText/InputTextConfirm.vue"],"sourcesContent":["<template>\n  <InputTextBase\n    v-bind=\"props\"\n    :modelValue=\"currentValue\"\n    :iconName=\"computedIconName\"\n    :viewMode=\"!isEditMode\"\n    :focus=\"isInputFocused\"\n    @update:modelValue=\"onInput\"\n    @iconClick=\"setEditModeStatus(!isEditMode)\"\n    @focus=\"setEditModeStatus(true)\"\n    @blur=\"setEditModeStatus(false)\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, watchEffect, watch } from \"vue\";\nimport { bool, number, string } from \"vue-types\";\nimport InputTextBase from \"@/shared/ui_kit/form/InputText/InputTextBase.vue\";\n\nconst props = defineProps({\n  placeholder: string().def(\"\"),\n  modelValue: string().def(\"\"),\n  disabled: bool().def(false),\n  error: string(),\n  required: bool().def(false),\n  label: string().def(\"\"),\n  updateValueKey: number(),\n});\n\nconst emit = defineEmits<{\n  (event: \"update:modelValue\", value: typeof props.modelValue): void;\n  (event: \"updateCurrentValue\", value: typeof props.modelValue): void;\n}>();\n\nconst currentValue = ref(props.modelValue);\n\nwatch(\n  () => props.updateValueKey,\n  () => (currentValue.value = props.modelValue)\n);\nwatchEffect(() => (currentValue.value = props.modelValue));\nconst onInput = (value: typeof props.modelValue) => {\n  currentValue.value = value;\n  emit(\"updateCurrentValue\", value);\n};\n\nconst isEditMode = ref(Boolean(props.error || props.disabled || !currentValue.value));\nconst isInputFocused = ref(false);\n\nwatchEffect(() => {\n  if (!isEditMode.value) {\n    isEditMode.value = Boolean(props.error || props.disabled || !currentValue.value);\n  }\n});\n\nconst setEditModeStatus = (status: boolean) => {\n  isEditMode.value = status;\n  isInputFocused.value = status;\n\n  if (!status) {\n    emit(\"update:modelValue\", currentValue.value);\n  }\n};\n\nconst computedIconName = computed(() => {\n  if (!currentValue.value) {\n    return undefined;\n  }\n\n  return isEditMode.value ? \"check\" : \"edit\";\n});\n</script>\n\n<style scoped lang=\"scss\">\n.input-confirm {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 100%;\n  height: 40px;\n\n  border-bottom: 1px solid var(--light-grey);\n  background-color: var(--white);\n  cursor: pointer;\n}\n\n.input-confirm__text {\n  color: var(--davy-grey);\n}\n\n.input-confirm__icon {\n  fill: var(--brandeis-blue);\n}\n</style>\n"],"names":["currentValue","ref","props","watch","watchEffect","onInput","value","emit","isEditMode","isInputFocused","setEditModeStatus","status","computedIconName","computed"],"mappings":"yhBAkCMA,EAAeC,EAAIC,EAAM,UAAU,EAEzCC,EACE,IAAMD,EAAM,eACZ,IAAOF,EAAa,MAAQE,EAAM,UAAA,EAEpCE,EAAY,IAAOJ,EAAa,MAAQE,EAAM,UAAW,EACnD,MAAAG,EAAWC,GAAmC,CAClDN,EAAa,MAAQM,EACrBC,EAAK,qBAAsBD,CAAK,CAAA,EAG5BE,EAAaP,EAAI,GAAQC,EAAM,OAASA,EAAM,UAAY,CAACF,EAAa,MAAM,EAC9ES,EAAiBR,EAAI,EAAK,EAEhCG,EAAY,IAAM,CACXI,EAAW,QACHA,EAAA,MAAQ,GAAQN,EAAM,OAASA,EAAM,UAAY,CAACF,EAAa,OAC5E,CACD,EAEK,MAAAU,EAAqBC,GAAoB,CAC7CH,EAAW,MAAQG,EACnBF,EAAe,MAAQE,EAElBA,GACEJ,EAAA,oBAAqBP,EAAa,KAAK,CAC9C,EAGIY,EAAmBC,EAAS,IAAM,CAClC,GAACb,EAAa,MAIX,OAAAQ,EAAW,MAAQ,QAAU,MAAA,CACrC"}