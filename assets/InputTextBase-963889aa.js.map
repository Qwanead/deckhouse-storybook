{"version":3,"file":"InputTextBase-963889aa.js","sources":["../../src/shared/ui_kit/form/InputText/InputTextBase.vue"],"sourcesContent":["<template>\n  <label class=\"input-text\">\n    <span v-if=\"label\" class=\"ty-forms-text input-text__label\">\n      {{ `${label}:` }}<span v-if=\"required\" class=\"input-text__required-mark\"> *</span>\n    </span>\n\n    <div class=\"input-text__error-wrapper\">\n      <InputErrorTooltip v-if=\"isTooltipShown\" class=\"input-text__error\" @close=\"isTooltipShown = false\">\n        {{ error }}\n      </InputErrorTooltip>\n    </div>\n\n    <div\n      class=\"input-text\"\n      :class=\"[\n        'ty-forms-text',\n        'input-text__wrapper',\n        {\n          'input-text__wrapper--disabled': disabled,\n          'input-text__wrapper--error': error,\n          'input-text__wrapper--focus': isFocused,\n          'input-text__wrapper--view': viewMode,\n        },\n      ]\"\n    >\n      <input\n        ref=\"inputRef\"\n        :type=\"type\"\n        class=\"ty-forms-text input-text__input\"\n        :value=\"modelValue\"\n        :placeholder=\"placeholder ?? ''\"\n        :disabled=\"disabled\"\n        @input=\"onInput\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n      />\n      <IconBase\n        v-if=\"computedIconName || disabled\"\n        :class=\"['input-text__icon', { 'input-text__icon--disabled': disabled, 'input-text__icon--error': error }]\"\n        :name=\"computedIconName\"\n        @click.stop.prevent=\"handleClick('iconClick')\"\n        @mousedown.stop.prevent=\"handleClick('iconMousedown')\"\n        @mouseup.stop.prevent=\"handleClick('iconMouseup')\"\n      />\n    </div>\n  </label>\n</template>\n\n<script setup lang=\"ts\">\nimport { bool, string } from \"vue-types\";\nimport IconBase from \"@/shared/ui_kit/icon/IconBase.vue\";\nimport type { IconName } from \"@/shared/ui_kit/icon/Icons\";\nimport { computed, ref, watch } from \"vue\";\nimport InputErrorTooltip from \"@/shared/ui_kit/form/InputText/InputErrorTooltip.vue\";\n\nconst props = defineProps({\n  type: string<\"text\" | \"password\">().def(\"text\"),\n  iconName: string<IconName>(),\n  placeholder: string().def(\"\"),\n  modelValue: string().def(\"\"),\n  disabled: bool().def(false),\n  error: string(),\n  required: bool().def(false),\n  label: string().def(\"\"),\n  viewMode: bool().def(false),\n  focus: bool().def(false),\n});\n\nconst emit = defineEmits<{\n  (event: \"update:modelValue\", value: typeof props.modelValue): void;\n  (event: \"iconClick\"): void;\n  (event: \"iconMousedown\"): void;\n  (event: \"iconMouseup\"): void;\n  (event: \"focus\"): void;\n  (event: \"blur\"): void;\n}>();\n\nconst computedIconName = computed(() => {\n  if (props.error) {\n    return \"warning\";\n  }\n\n  if (props.disabled) {\n    return \"lock\";\n  }\n\n  return props.iconName;\n});\n\nconst inputRef = ref<HTMLInputElement | null>(null);\n\nconst onInput = (evt: Event) => {\n  const value = (evt.target as HTMLInputElement).value;\n  emit(\"update:modelValue\", value);\n};\n\nconst handleClick = (event: \"iconClick\" | \"iconMousedown\" | \"iconMouseup\") => {\n  if (!props.error && !props.disabled) {\n    emit(event);\n  }\n};\n\nconst isFocused = ref(false);\nconst onFocus = () => {\n  isFocused.value = true;\n  emit(\"focus\");\n};\nconst onBlur = () => {\n  isFocused.value = false;\n  emit(\"blur\");\n};\n\nconst isTooltipShown = ref(Boolean(props.error));\nwatch(\n  () => props.error,\n  () => (isTooltipShown.value = Boolean(props.error))\n);\n\nwatch(\n  () => props.focus,\n  () => {\n    if (inputRef.value) {\n      props.focus ? inputRef.value.focus() : inputRef.value.blur();\n    }\n  }\n);\n</script>\n\n<style scoped lang=\"scss\">\n.input-text__wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 100%;\n  height: 40px;\n  padding: 0 15px;\n\n  border: 1px solid var(--light-grey);\n  border-radius: 6px;\n  background-color: var(--white);\n\n  transition: all var(--transition);\n\n  &--focus {\n    border-color: var(--silver-chalice);\n  }\n\n  &--error {\n    border-color: var(--desire);\n  }\n\n  &--disabled {\n    background-color: var(--blue-alise);\n  }\n\n  &--view {\n    padding: 0;\n    border: none;\n    border-bottom: 1px solid var(--light-grey);\n    border-radius: 0;\n  }\n}\n\n.input-text__label {\n  position: relative;\n\n  display: block;\n\n  margin-bottom: 10px;\n\n  color: var(--grey);\n}\n\n.input-text__required-mark {\n  color: var(--brandeis-blue);\n}\n\n.input-text__error-wrapper {\n  position: relative;\n}\n\n.input-text__error {\n  position: absolute;\n  z-index: 1;\n  right: 0;\n  bottom: 3px;\n}\n\n.input-text__input {\n  width: 100%;\n  padding: 0;\n\n  color: var(--davy-grey);\n  border: none;\n  background-color: transparent;\n\n  &::placeholder {\n    color: var(--silver-chalice);\n\n    font-family: \"Noto Sans\";\n    font-size: 14px;\n    font-weight: 400;\n    font-style: normal;\n    line-height: 19px;\n  }\n\n  &:focus {\n    border: none;\n    outline: none;\n    box-shadow: none;\n  }\n}\n\n.input-text__icon {\n  flex-shrink: 0;\n\n  cursor: pointer;\n\n  fill: var(--brandeis-blue);\n\n  &--error {\n    cursor: default;\n\n    fill: var(--desire);\n  }\n\n  &--disabled {\n    cursor: default;\n\n    fill: var(--grey);\n  }\n}\n</style>\n"],"names":["computedIconName","computed","props","inputRef","ref","onInput","evt","value","emit","handleClick","event","isFocused","onFocus","onBlur","isTooltipShown","watch"],"mappings":"o4BA6EMA,EAAmBC,EAAS,IAC5BC,EAAM,MACD,UAGLA,EAAM,SACD,OAGFA,EAAM,QACd,EAEKC,EAAWC,EAA6B,IAAI,EAE5CC,EAAWC,GAAe,CACxB,MAAAC,EAASD,EAAI,OAA4B,MAC/CE,EAAK,oBAAqBD,CAAK,CAAA,EAG3BE,EAAeC,GAAyD,CACxE,CAACR,EAAM,OAAS,CAACA,EAAM,UACzBM,EAAKE,CAAK,CACZ,EAGIC,EAAYP,EAAI,EAAK,EACrBQ,EAAU,IAAM,CACpBD,EAAU,MAAQ,GAClBH,EAAK,OAAO,CAAA,EAERK,EAAS,IAAM,CACnBF,EAAU,MAAQ,GAClBH,EAAK,MAAM,CAAA,EAGPM,EAAiBV,EAAI,EAAQF,EAAM,KAAM,EAC/C,OAAAa,EACE,IAAMb,EAAM,MACZ,IAAOY,EAAe,MAAQ,EAAQZ,EAAM,KAAK,EAGnDa,EACE,IAAMb,EAAM,MACZ,IAAM,CACAC,EAAS,QACXD,EAAM,MAAQC,EAAS,MAAM,QAAUA,EAAS,MAAM,OAE1D,CAAA"}