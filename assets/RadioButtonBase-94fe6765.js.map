{"version":3,"file":"RadioButtonBase-94fe6765.js","sources":["../../src/shared/ui_kit/form/InputRadioButton/RadioButtonBase.vue"],"sourcesContent":["<template>\n  <div class=\"radio-button\">\n    <input\n      :id=\"randomId\"\n      :class=\"['radio-button__input', { 'radio-button__input--disabled': disabled }]\"\n      type=\"radio\"\n      :name=\"name\"\n      :value=\"value\"\n      :checked=\"isChecked\"\n      :disabled=\"disabled\"\n      @change=\"onChange\"\n    />\n\n    <label v-if=\"$slots.default\" :for=\"randomId\" class=\"ty-forms-text radio-button__label\"><slot /></label>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { string, bool } from \"vue-types\";\nimport { randomString } from \"@/shared/ui_kit/utils\";\nimport { computed } from \"vue\";\n\nconst props = defineProps({\n  name: string().isRequired,\n  value: string(),\n  modelValue: string(),\n  disabled: bool().def(false),\n  label: string(),\n});\n\nconst emit = defineEmits<{\n  (event: \"update:modelValue\", value: typeof props.value): void;\n}>();\n\nconst isChecked = computed(() => props.modelValue === props.value);\n\nconst randomId = randomString();\n\nconst onChange = (evt: Event) => {\n  if ((evt.target as HTMLInputElement).checked) {\n    emit(\"update:modelValue\", props.value);\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.radio-button {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.radio-button__input {\n  position: relative;\n\n  width: 20px;\n  height: 20px;\n\n  transition: border var(--transition);\n\n  border: 1px solid var(--light-grey);\n  background-color: var(--white);\n\n  appearance: none;\n\n  &::after {\n    position: absolute;\n    top: calc(50% - 4px);\n    left: calc(50% - 4px);\n\n    width: 8px;\n    height: 8px;\n\n    content: \"\";\n    transition: background-color var(--transition);\n\n    border-radius: 50%;\n    background-color: transparent;\n  }\n\n  &:focus,\n  &:active {\n    border: 1px solid var(--light-grey);\n  }\n\n  &:checked,\n  &:checked:hover,\n  &:checked:focus {\n    outline: none;\n    background-color: var(--white);\n    background-image: none;\n    border: 1px solid var(--light-grey);\n    box-shadow: none;\n\n    &::after {\n      background-color: var(--dark-blue);\n    }\n  }\n\n  &:hover {\n    border: 1px solid var(--silver-chalice);\n  }\n\n  &--disabled {\n    background-color: var(--blue-alise);\n\n    &:checked {\n      background-color: var(--blue-alise);\n\n      &::after {\n        background-color: var(--silver-chalice);\n      }\n    }\n\n    &:hover {\n      border: 1px solid var(--light-grey);\n    }\n  }\n}\n\n.radio-button__label {\n  color: var(--davy-grey);\n}\n</style>\n"],"names":["isChecked","computed","props","randomId","randomString","onChange","evt","emit"],"mappings":"wgBAkCMA,EAAYC,EAAS,IAAMC,EAAM,aAAeA,EAAM,KAAK,EAE3DC,EAAWC,IAEXC,EAAYC,GAAe,CAC1BA,EAAI,OAA4B,SAC9BC,EAAA,oBAAqBL,EAAM,KAAK,CACvC"}