{"version":3,"file":"InputSelectButton-6adddfcd.js","sources":["../../src/shared/ui_kit/form/InputSelectButton.vue"],"sourcesContent":["<template>\n  <ul class=\"input-button\">\n    <li v-for=\"(option, i) in options\" :key=\"i\">\n      <ButtonBase\n        :btn-style=\"modelValue.includes(option.value) ? 'accent' : 'default'\"\n        :uppercase=\"false\"\n        :disabled=\"disabled\"\n        @click=\"onBtnClick(option.value)\"\n      >\n        {{ option.label }}\n      </ButtonBase>\n    </li>\n  </ul>\n</template>\n\n<script setup lang=\"ts\">\nimport { array, bool } from \"vue-types\";\nimport ButtonBase from \"@/shared/ui_kit/ButtonBase.vue\";\n\nconst props = defineProps({\n  options: array<{ label: string; value: string }>().def(() => []),\n  modelValue: array<string>().def(() => []),\n  disabled: bool().def(false),\n});\n\nconst emit = defineEmits<{\n  (event: \"update:modelValue\", value: typeof props.modelValue): void;\n}>();\n\nconst onBtnClick = (value: string) => {\n  if (props.modelValue.includes(value)) {\n    emit(\n      \"update:modelValue\",\n      props.modelValue.filter((selected) => selected !== value)\n    );\n  } else {\n    emit(\"update:modelValue\", [...props.modelValue, value]);\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.input-button {\n  display: flex;\n\n  gap: 20px;\n}\n</style>\n"],"names":["onBtnClick","value","props","emit","selected"],"mappings":"odA6BMA,EAAcC,GAAkB,CAChCC,EAAM,WAAW,SAASD,CAAK,EACjCE,EACE,oBACAD,EAAM,WAAW,OAAQE,GAAaA,IAAaH,CAAK,CAAA,EAG1DE,EAAK,oBAAqB,CAAC,GAAGD,EAAM,WAAYD,CAAK,CAAC,CACxD"}